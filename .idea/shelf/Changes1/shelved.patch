Index: project-root/backend/src/utils/populate_db.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from pymongo import MongoClient\r\nfrom bson import ObjectId\r\nimport bcrypt\r\nimport datetime\r\nimport random\r\n\r\n# CHANGE HERE CREDENTIALS\r\nclient = MongoClient(\"mongodb://admin:admin@localhost:27017/\")\r\ndb = client[\"Moodle-Bodio\"]\r\n\r\ndb.users.drop()\r\ndb.courses.drop()\r\ndb.sections.drop()\r\n\r\nteacher1_id = ObjectId()\r\nteacher2_id = ObjectId()\r\nteacher3_id = ObjectId()\r\n\r\nteachers_data = [\r\n    {\r\n        \"_id\": teacher1_id,\r\n        \"name\": \"Davide\",\r\n        \"surname\": \"Krähenbühl\",\r\n        \"sex\": \"male\",\r\n        \"birth\": datetime.datetime(1985, 5, 15),\r\n        \"email\": \"davide.krahenbuhl@example.com\",\r\n        \"password_hash\": bcrypt.hashpw(\"password123\".encode('utf-8'), bcrypt.gensalt()).decode('utf-8'),\r\n        \"role\": \"teacher\",\r\n        \"courses\": []\r\n    },\r\n    {\r\n        \"_id\": teacher2_id,\r\n        \"name\": \"Gionata\",\r\n        \"surname\": \"Genazzi\",\r\n        \"sex\": \"male\",\r\n        \"birth\": datetime.datetime(1982, 8, 22),\r\n        \"email\": \"gionata.genazzi@example.com\",\r\n        \"password_hash\": bcrypt.hashpw(\"password123\".encode('utf-8'), bcrypt.gensalt()).decode('utf-8'),\r\n        \"role\": \"teacher\",\r\n        \"courses\": []\r\n    },\r\n    {\r\n        \"_id\": teacher3_id,\r\n        \"name\": \"Simone\",\r\n        \"surname\": \"Debortoli\",\r\n        \"sex\": \"male\",\r\n        \"birth\": datetime.datetime(1978, 3, 10),\r\n        \"email\": \"simone.debortoli@example.com\",\r\n        \"password_hash\": bcrypt.hashpw(\"password123\".encode('utf-8'), bcrypt.gensalt()).decode('utf-8'),\r\n        \"role\": \"teacher\",\r\n        \"courses\": []\r\n    }\r\n]\r\n\r\nstudent_ids = []\r\nstudents_data = []\r\n\r\nmale_names = [\"Marco\", \"Luca\", \"Alessandro\", \"Giuseppe\", \"Giovanni\", \"Antonio\", \"Francesco\", \"Roberto\", \"Matteo\", \"Andrea\"]\r\nfemale_names = [\"Sofia\", \"Giulia\", \"Martina\", \"Chiara\", \"Francesca\", \"Sara\", \"Valentina\", \"Laura\", \"Anna\", \"Maria\"]\r\n\r\nlast_names = [\"Rossi\", \"Bianchi\", \"Ferrari\", \"Esposito\", \"Romano\", \"Colombo\", \"Ricci\", \"Marino\", \"Greco\", \"Bruno\"]\r\n\r\nfor i in range(20):\r\n    student_id = ObjectId()\r\n    student_ids.append(student_id)\r\n\r\n    gender = \"male\" if i % 2 == 0 else \"female\"\r\n    first_name = random.choice(male_names if gender == \"male\" else female_names)\r\n    last_name = random.choice(last_names)\r\n\r\n    year = random.randint(1995, 2005)\r\n    month = random.randint(1, 12)\r\n    day = random.randint(1, 28)\r\n\r\n    students_data.append({\r\n        \"_id\": student_id,\r\n        \"name\": first_name,\r\n        \"surname\": last_name,\r\n        \"sex\": gender,\r\n        \"birth\": datetime.datetime(year, month, day),\r\n        \"email\": f\"{first_name.lower()}.{last_name.lower()}@example.com\",\r\n        \"password_hash\": bcrypt.hashpw(\"12345678\".encode('utf-8'), bcrypt.gensalt()).decode('utf-8'),\r\n        \"role\": \"student\",\r\n        \"courses\": []\r\n    })\r\n\r\nsections_data = []\r\nsection_ids = {}\r\n\r\nsection_templates = {\r\n    \"M320\": [\r\n        {\"name\": \"Introduzione alla OOP\", \"data\": []},\r\n        {\"name\": \"Classi e Oggetti\", \"data\": []},\r\n        {\"name\": \"Ereditarietà\", \"data\": []},\r\n        {\"name\": \"Polimorfismo\", \"data\": []}\r\n    ],\r\n    \"M293\": [\r\n        {\"name\": \"HTML Basics\", \"data\": []},\r\n        {\"name\": \"CSS Styling\", \"data\": []},\r\n        {\"name\": \"JavaScript Interattivo\", \"data\": []},\r\n        {\"name\": \"Pubblicazione Web\", \"data\": []}\r\n    ],\r\n    \"M426\": [\r\n        {\"name\": \"Metodologie Agili\", \"data\": []},\r\n        {\"name\": \"Scrum\", \"data\": []},\r\n        {\"name\": \"Kanban\", \"data\": []},\r\n        {\"name\": \"Test Driven Development\", \"data\": []}\r\n    ],\r\n    \"M165\": [\r\n        {\"name\": \"Introduzione a NoSQL\", \"data\": []},\r\n        {\"name\": \"MongoDB\", \"data\": []},\r\n        {\"name\": \"Redis\", \"data\": []},\r\n        {\"name\": \"Cassandra\", \"data\": []}\r\n    ],\r\n    \"M322\": [\r\n        {\"name\": \"Principi di UI/UX\", \"data\": []},\r\n        {\"name\": \"Frameworks UI\", \"data\": []},\r\n        {\"name\": \"Responsive Design\", \"data\": []},\r\n        {\"name\": \"Accessibilità\", \"data\": []}\r\n    ]\r\n}\r\n\r\nfor course_name, sections in section_templates.items():\r\n    section_ids[course_name] = []\r\n    for section in sections:\r\n        section_id = ObjectId()\r\n        section_ids[course_name].append(section_id)\r\n        sections_data.append({\r\n            \"_id\": section_id,\r\n            \"name\": section[\"name\"],\r\n            \"data\": section[\"data\"]\r\n        })\r\n\r\ncourses_data = [\r\n    {\r\n        \"_id\": ObjectId(),\r\n        \"name\": \"M320\",\r\n        \"description\": \"Programmazione orientata a oggetti\",\r\n        \"teacher\": teacher1_id,\r\n        \"sections\": section_ids[\"M320\"],\r\n        \"students\": random.sample(student_ids, 16),\r\n        \"color\": \"rgba(0, 170, 255, 0.11)\",\r\n    },\r\n    {\r\n        \"_id\": ObjectId(),\r\n        \"name\": \"M293\",\r\n        \"description\": \"Creare e pubblicare una pagina web\",\r\n        \"teacher\": teacher2_id,\r\n        \"sections\": section_ids[\"M293\"],\r\n        \"students\": random.sample(student_ids, 8),\r\n        \"color\": \"rgba(120, 255, 0, 0.11)\"\r\n    },\r\n    {\r\n        \"_id\": ObjectId(),\r\n        \"name\": \"M426\",\r\n        \"description\": \"Sviluppare software con metodi agili\",\r\n        \"teacher\": teacher2_id,\r\n        \"sections\": section_ids[\"M426\"],\r\n        \"students\": random.sample(student_ids, 8),\r\n        \"color\": \"rgba(255, 189, 0, 0.11)\"\r\n    },\r\n    {\r\n        \"_id\": ObjectId(),\r\n        \"name\": \"M165\",\r\n        \"description\": \"Utilizzare banche dati NoSQL\",\r\n        \"teacher\": teacher3_id,\r\n        \"sections\": section_ids[\"M165\"],\r\n        \"students\": random.sample(student_ids, 8),\r\n        \"color\": \"rgba(166, 0, 255, 0.11)\"\r\n    },\r\n    {\r\n        \"_id\": ObjectId(),\r\n        \"name\": \"M322\",\r\n        \"description\": \"Sviluppare interfacce grafiche\",\r\n        \"teacher\": teacher1_id,\r\n        \"sections\": section_ids[\"M322\"],\r\n        \"students\": random.sample(student_ids, 8),\r\n        \"color\": \"rgba(255, 0, 0, 0.11)\"\r\n    }\r\n]\r\n\r\nfor course in courses_data:\r\n    for teacher in teachers_data:\r\n        if teacher[\"_id\"] == course[\"teacher\"]:\r\n            teacher[\"courses\"].append(course[\"_id\"])\r\n\r\nfor course in courses_data:\r\n    for student_id in course[\"students\"]:\r\n        for student in students_data:\r\n            if student[\"_id\"] == student_id:\r\n                student[\"courses\"].append(course[\"_id\"])\r\n\r\ndb.users.insert_many(teachers_data + students_data)\r\ndb.sections.insert_many(sections_data)\r\ndb.courses.insert_many(courses_data)\r\n\r\nprint(\"Database popolato con successo con il nuovo schema.\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project-root/backend/src/utils/populate_db.py b/project-root/backend/src/utils/populate_db.py
--- a/project-root/backend/src/utils/populate_db.py	(revision 1e8fffe29a425dc60a1db4f6b2f1d57f23298985)
+++ b/project-root/backend/src/utils/populate_db.py	(date 1743669608001)
@@ -5,7 +5,7 @@
 import random
 
 # CHANGE HERE CREDENTIALS
-client = MongoClient("mongodb://admin:admin@localhost:27017/")
+client = MongoClient("mongodb+srv://julie:Passworddb123@cluster1.28syrfz.mongodb.net/")
 db = client["Moodle-Bodio"]
 
 db.users.drop()
Index: .idea/Moodle-Bodio.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"WEB_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"Python\" name=\"Python facet\">\r\n      <configuration sdkName=\"Python 3.13 (Moodle-Bodio)\" />\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/.tmp\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/temp\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/tmp\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Python 3.13 (Moodle-Bodio) interpreter library\" level=\"application\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Moodle-Bodio.iml b/.idea/Moodle-Bodio.iml
--- a/.idea/Moodle-Bodio.iml	(revision 1e8fffe29a425dc60a1db4f6b2f1d57f23298985)
+++ b/.idea/Moodle-Bodio.iml	(date 1743669526041)
@@ -2,7 +2,7 @@
 <module type="WEB_MODULE" version="4">
   <component name="FacetManager">
     <facet type="Python" name="Python facet">
-      <configuration sdkName="Python 3.13 (Moodle-Bodio)" />
+      <configuration sdkName="Python 3.10 (Moodle-Bodio)" />
     </facet>
   </component>
   <component name="NewModuleRootManager">
@@ -11,9 +11,10 @@
       <excludeFolder url="file://$MODULE_DIR$/temp" />
       <excludeFolder url="file://$MODULE_DIR$/tmp" />
       <excludeFolder url="file://$MODULE_DIR$/venv" />
+      <excludeFolder url="file://$MODULE_DIR$/.venv" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="Python 3.13 (Moodle-Bodio) interpreter library" level="application" />
+    <orderEntry type="library" name="Python 3.10 (Moodle-Bodio) interpreter library" level="application" />
   </component>
 </module>
\ No newline at end of file
